#pragma once
/** 
@file	Posetitel.h
@brief	Заголовочный файл класса Персоны
@copyright	Иу5-27М
@author	Бобров, Зажмилин, Медведев
@date	13-05-2015
@version	alpha
\par Использует классы
	@ref Posetitel
\par Содержит класс
	@ref Posetitel
*/
/// Класс описания персоны
/** Содержит данные персоны и методы для работы с ними
*/
class Posetitel
{
protected:
	char *_FIO1;	///< ФИО
	char *_birthday;	///< Дата рождения
	char *_addr;	///< адрес в произвольном формате
	int _ID;	///< ID читательского билета
	int _onHands;	///< Количество взятых книг

	float _Money;	///< Количество денег на читательском билете
	int _Kurs;	///< На каком курсе студент


public:
	/// Конструктор по умолчанию
	/** Создает персону безе инициализации полей
	*/
	Posetitel(void);
	/// Конструктор с заполнением полей класса
	/** Создает персону и инициализирует её поля
	\ param fio1 ФИО посетителя
	\ param age Дата рождения посетителя
	\ param ID Номер карты посетителя
	\ param onHands Количество книг на руках
	\ param money Количество денег на счете карты
	\ param Kurs Номер курса

	*/

	Posetitel(char * fio1,char *birthday, char *addr, int ID, int onHands, float Money, int Kurs);

	/// Деструктор освобождает ресурсы
	~Posetitel(void);
	/// Возвращает полную информацию о персоне
	/** Если сведений нет, то возвращает сообщение об ошибке

	\return строку и данными о персоне в формате (ФИО, дата рождения, адрес, Номер карты, количество книг на руках, курсе, количество денег на счете)

	*/
	char * getFullInfo();
	/** \brief Изменяет адрес владельца карты

	Перед изменением проверяет формат строки с адресом (код, город, улица, дом-корпус-номер)
	@param newAddr новый адрес владельца карты
	@return успешность выполнения действия */
	bool changeAddr(char *newAddr);

/** \brief Изменяет количество книг на руках

	Перед изменением проверяет формат значения
	@param newonHands новое количество книг на руках
	@return успешность выполнения действия */
	bool changeonHands(int *newonHands);
};

